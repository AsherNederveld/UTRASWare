; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\adcexample.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\adcexample.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I.. -I../../.. -IC:\Users\matth\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=533 -DTM4C123GH6PM -Drvmdk -DPART_LM4F120H5QR --omf_browse=.\objects\adcexample.crf ADCExample.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;28     #if __MAIN__ == 0
;;;29     int main(void) {
000000  b51f              PUSH     {r0-r4,lr}
;;;30         /**
;;;31          * This program demonstrates initializing the pin PE3 as an ADC and reading
;;;32          * from it at a fixed rate in software.
;;;33          */
;;;34         PLL_Init(Bus80MHz);
000002  2004              MOVS     r0,#4
000004  f7fffffe          BL       PLL_Init
;;;35         DisableInterrupts();
000008  f7fffffe          BL       DisableInterrupts
;;;36     
;;;37         /* Initialize SysTick for delay calls.*/
;;;38         delayInit();
00000c  f7fffffe          BL       delayInit
;;;39         
;;;40         /* Initialize a default SW controlled ADC on PE3. The default utilizes
;;;41          * ADC Module 0, ADC Sample Sequencer SS0, and ADCSequence position ZERO.
;;;42          * It is also by default the end sample, so the sequencer completes its
;;;43          * sampling at position zero.
;;;44          */
;;;45         ADCConfig_t adcConfig = {};
000010  2000              MOVS     r0,#0
000012  9002              STR      r0,[sp,#8]
000014  9003              STR      r0,[sp,#0xc]
;;;46         ADC_t adc = ADCInit(adcConfig);
000016  e9dd0102          LDRD     r0,r1,[sp,#8]
00001a  f7fffffe          BL       ADCInit
00001e  9001              STR      r0,[sp,#4]
;;;47     
;;;48         volatile uint32_t adcOutput = 0;
000020  2000              MOVS     r0,#0
000022  9000              STR      r0,[sp,#0]
;;;49     
;;;50         EnableInterrupts();
000024  f7fffffe          BL       EnableInterrupts
;;;51         while (1) {
000028  e007              B        |L1.58|
                  |L1.42|
;;;52             /* Every 300ms, sample from PE3. */
;;;53             delayMillisec(300);
00002a  f44f7096          MOV      r0,#0x12c
00002e  f7fffffe          BL       delayMillisec
;;;54             adcOutput = ADCSample(adc);
000032  9801              LDR      r0,[sp,#4]
000034  f7fffffe          BL       ADCSample
000038  9000              STR      r0,[sp,#0]
                  |L1.58|
00003a  e7f6              B        |L1.42|
;;;55         };
;;;56     }
;;;57     #elif __MAIN__ == 1
                          ENDP


                  __ARM_use_no_argv EQU 0
